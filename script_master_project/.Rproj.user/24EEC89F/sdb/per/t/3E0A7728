{
    "collab_server" : "",
    "contents" : "\n# Import package ----------------------------------------------------------\nlibrary(isa2)\nlibrary(gplots)\nlibrary(ggplot2)\n\n\n# ISA functions -----------------------------------------------------------\nsource('C:/Mimi/Stage_CBG/2.EXPRESSION_MODULE/expression_module/ISA_functions.R')\n\n\n# Grafical parameters -----------------------------------------------------\n## green, yellow and red scale used for heatmap plot (used in the case of a graphical representation of the percentage of identity for example)\nmy_palette <- colorRampPalette(c(\"red\", \"yellow\", \"green\"))(n = 299)\ncol_breaks = c(seq(0,0.33,length=100),             # for red\n               seq(0.34,0.66,length=100),          # for yellow\n               seq(0.67,1,length=100))             # for green\n\n\n# Import Data -------------------------------------------------------------\n\n## serum data\nserum <- read.csv(\"C://Mimi/Stage_CBG/2.EXPRESSION_MODULE/Data/metabolomics/serum.nmr.focus.all.colaus1.20160830.csv\", h = F)\nppm <- paste(\"ppm\", serum[1,2:ncol(serum)], sep =\"_\")\ntp  <- paste(\"id\", serum[2:nrow(serum),1], sep = \"_\")\nserum <- serum[2:nrow(serum), 2:ncol(serum)]\ncolnames(serum) <- ppm\nrownames(serum) <- tp\n\n## urine data\nurine <- read.csv(\"C://Mimi/Stage_CBG/2.EXPRESSION_MODULE/Data/metabolomics/urine.nmr.focus.all.colaus1.20161205.csv\", h = F)\nppm <- paste(\"ppm\", urine[1,2:ncol(urine)], sep =\"_\")\ntp  <- paste(\"id\", urine[2:nrow(urine),1], sep = \"_\")\nurine <- urine[2:nrow(urine), 2:ncol(urine)]\ncolnames(urine) <- ppm\nrownames(urine) <- tp\n\nrm(\"ppm\", \"tp\")\n## select matching id (790 individuals having serum and urine metabolomics)\nserum <- serum[rownames(serum) %in% rownames(urine),]\nserum <- serum[order(rownames(serum)),]\nurine <- urine[rownames(urine) %in% rownames(serum),]\nurine <- urine[order(rownames(urine)),]\n\n\n# Data Normalization ------------------------------------------------------\n\n## Data Normalization (z-score normalization)\n# serum\nserum[serum<1]=1 # to avoid negative numbers\nserum_log <- log10(serum) # log-transformed data\n## z-score normalization for features\nserum_feature_scaled <- scale(serum_log)\n## z-score normalization for individulas\nserum_ind_scaled <- t(scale(t(serum_log)))\n## z-score normalization first for individuals and second for the features\nserum_ind_feat_scaled <- scale(serum_ind_scaled)\n## z-score normaizazion first accoring to features and second for individuals\nserum_feat_ind_scaled <- t(scale(t(serum_feature_scaled)))\n\n### urine\nurine[urine<1]=1 # to avoid negative numbers\nurine_log <- log10(urine)# log-transformed data\n## z-score normalization for features\nurine_feature_scaled <- scale(urine_log)\n## z-score normalization for individulas\nurine_ind_scaled <- t(scale(t(urine_log)))\n## z-score normalization first for individuals and second for the features\nurine_ind_feat_scaled <- scale(urine_ind_scaled)\n## z-score normaizazion first accoring to features and second for individuals\nurine_feat_ind_scaled <- t(scale(t(urine_feature_scaled)))\n\n### used data -> first normalized by individuals, second by features\nserum <- serum_ind_feat_scaled\nurine <- urine_ind_feat_scaled\n\n#### Phenotype data:\npheno_raw <- read.csv(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/traits.raw.colaus1.20161116.csv\", h = F, sep = \",\", stringsAsFactors = T)\npheno_transf <- read.csv(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/traits.transformed.colaus1.20161116.csv\", h = F, sep = \",\")\npheno_names <- read.csv(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/trait_names.raw.colaus1.20161116.csv\", h = F, sep = \",\")\npheno <- pheno_raw\ncolnames(pheno) <- c(\"ID\", as.character(pheno_names$V1))\nrm(pheno_names, pheno_raw)\n\nsave(urine, serum, pheno, file = \"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/metabo_pheno_data.Rdata\")\n\n# Look to the data!! ------------------------------------------------------\n# Know the story around the data!\n# Ask concrete questions!\n# Always look at the data!\n# Transformation if needed!\n\nstr(urine)\n\n## Data summary and viszualization\ndim(urine)\ndim(serum)\n\ntable(urine<0)\n\nplot(sort(as.numeric(sapply(strsplit(colnames(serum), \"_\"), \"[[\", 2)), decreasing = T), rev(serum[1,]), type = \"h\")\nplot(sort(as.numeric(sapply(strsplit(colnames(serum), \"_\"), \"[[\", 2)), decreasing = T), rev(serum[2,]), type = \"h\")\n\nsummary(urine$ppm_9.28)\n\nsummary(urine)\n\n############ visualization #################\n## raw data\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/raw_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(serum), main = \"Raw data (serum)\")\ndev.off()\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/raw_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(urine), main = \"Raw data (urine)\")\ndev.off()\n\n## log transformed serum data image\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/log_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(serum_log), main = \"Log transformed data (serum)\")\ndev.off()\n\n## z-score normalization for features (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/feat_scaled_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(serum_feature_scaled), main = \"z-transformation for features (serum)\")\ndev.off()\n\n## z-score normalization for individulas (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/ind_scaled_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(serum_ind_scaled), main = \"z-transformation for individuals (serum)\")\ndev.off()\n\n## z-score normalization first for individuals and second for the features (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/ind_feat_scaled_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(serum_ind_feat_scaled), main = \"z-transformation for individuals and features (serum)\")\ndev.off()\n## z-score normalization first for features and second for the individuals (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/feat_ind_scaled_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(serum_feat_ind_scaled), main = \"z-transformation for features and individuals (serum)\")\ndev.off()\n\n\n\n### urine\n## log transformed urine data image\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/log_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(urine_log), main = \"Log transformed data (urine)\")\ndev.off()\n\n## z-score normalization for features (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/feat_scaled_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(urine_feature_scaled), main = \"z-transformation for features (urine)\")\ndev.off()\n\n## z-score normalization for individulas (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/ind_scaled_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(urine_ind_scaled), main = \"z-transformation for individuals (urine)\")\ndev.off()\n\n## z-score normalization first for individuals and second for the features (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/ind_feat_scaled_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(urine_ind_feat_scaled), main = \"z-transformation for individuals and features (urine)\")\ndev.off()\n## z-score normalization first for features and second for the individuals (with image)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/feat_ind_scaled_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(as.matrix(urine_ind_feat_scaled), main = \"z-transformation for features and individuals (urine)\")\ndev.off()\n\n\n## Correlation between features\n# serum\nfluid = \"serum\"\n# urine\nfluid = \"urine\"\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/\", fluid, \"_corr_raw\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(cor(eval(parse(text = fluid))), main = paste0(\"Features correlation of raw \", fluid, \" data\"))\ndev.off()\n# z-score normalized data by features\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/\", fluid, \"_corr_feat_norm\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(cor(eval(parse(text = paste0(fluid, \"_feature_scaled\")))), main = paste0(\"Features correlation of features scaled \", fluid, \" data\"))\ndev.off()\n# z-score normalized data by individuals\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/\", fluid, \"_corr_ind_norm\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(cor(eval(parse(text = paste0(fluid, \"_ind_scaled\")))), main = paste0(\"Features correlation of individuals scaled \", fluid, \" data\"))\ndev.off()\n# z-score normalized data first by individuals second by features\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/\", fluid, \"_corr_ind_feat_norm\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(cor(eval(parse(text = paste0(fluid, \"_ind_feat_scaled\")))), main = paste0(\"Features correlation of individuals and features scaled \", fluid, \" data\"))\ndev.off()\n# z-score normalized data first by features second by indiviuals\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/data_info/\", fluid, \"_corr_feat_ind_norm\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nimage(cor(eval(parse(text = paste0(fluid, \"_feat_ind_scaled\")))), main = paste0(\"Features correlation of features and individuals scaled \", fluid, \" data\"))\ndev.off()\n\n\n\n\n\n\n# isa run ---------------------------------------------------------\n\n# 27 07 2017 parameters\n## serum\nserum.isa <- isa(as.matrix(serum), thr.row = seq(2, 3.5, by = 0.1), thr.col = seq(2, 3.5, by = 0.1))\n## urine\nurine.isa <- isa(as.matrix(urine), thr.row = seq(2, 3.5, by = 0.1), thr.col = seq(2, 3.5, by = 0.1))\n\n## save analysis:\n# save(serum.isa, urine.isa, file = \"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/ser_ur_modules20170727.RData\")\n# load(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/ser_ur_modules20170502.RData\")\n# load(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/ser_ur_modules20170727.RData\")\n\n\n# urine and serum combination\nuri.ser <- cbind(urine, serum)\ncolnames(uri.ser) <- c(paste0(\"u.\", colnames(urine)), paste0(\"s.\", colnames(serum)))\nuri.ser.isa <- isa(as.matrix(uri.ser))\n\n\n\n# isa unique --------------------------------------------------------------\n## Increase the number of subjects per module, reduce the total number of modules (to have less, bigger modules)\nserum.norm <- isa.normalize(as.matrix(serum_ind_feat_scaled))\nurine.norm <- isa.normalize(as.matrix(urine_ind_feat_scaled))\n\n## August 2017, result saved in ser_ur_isa20170827.RData (created using the server!)\n#serum\nserum.isa <- isa(as.matrix(serum_ind_feat_scaled), thr.row = seq(1, 2.5, by = 0.1), thr.col = seq(2, 3.5, by = 0.1))\n## urine\nurine.isa <- isa(as.matrix(urine_ind_feat_scaled), thr.row = seq(1, 2.5, by = 0.1), thr.col = seq(2, 3.5, by = 0.1))\n\nload(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/ser_ur_isa20170827.RData\")\n\nserum.uni <- isa.unique(serum.norm, serum.isa, method = c(\"cor\"), \n                        ignore.div = TRUE, cor.limit = 0.7, neg.cor = TRUE, drop.zero = TRUE)\n\nurine.uni <- isa.unique(urine.norm, urine.isa, method = c(\"cor\"), ignore.div = TRUE, \n                        cor.limit = 0.7, neg.cor = TRUE, drop.zero = TRUE)\n\n\n\n# Module analysis ---------------------------------------------------------\n\n## module info\nserum.modules   <- isaModules(serum.isa, type = \"isa\")\nurine.modules   <- isaModules(urine.isa, type = \"isa\")\n# uri.ser.modules <- isaModules(uri.ser.isa)\nserum.modules.uni <- isaModules(serum.uni, type = \"isa\")\nurine.modules.uni <- isaModules(urine.uni, type = \"isa\")\n\n# serum\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_hist_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\npar(mfrow=c(1,2))\nhist(serum.modules$colGroups, col = \"red\", main = \"Peaks by modules\", xlab = \"serum\", cex.lab=1.6, \n     cex.axis=1.7, cex.main=1.7, cex.sub=1.7)\nhist(serum.modules$rowGroups, col = \"orange\", main = \"Individuals by modules\", xlab = \"serum\", \n     cex.lab=1.6, cex.axis=1.7, cex.main=1.7, cex.sub=1.7)\ndev.off()\n\n# urine\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_hist_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\npar(mfrow=c(1,2))\nhist(urine.modules$colGroups, col = \"blue\", main = \"Peaks by modules\", xlab = \"urine\", cex.lab=1.6, cex.axis=1.7, cex.main=1.7, cex.sub=1.7)\nhist(urine.modules$rowGroups, col = \"yellow\", main = \"Individuals by modules\", xlab = \"urine\", cex.lab=1.6, cex.axis=1.7, cex.main=1.7, cex.sub=1.7)\ndev.off()\n\n# combination of urine and serum datasets\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_hist_uri_ser\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\npar(mfrow=c(1,2))\nhist(uri.ser.modules$colGroups, col = \"blue\", main = \"Peaks by modules\", xlab = \"Serum and urine combined\", cex.lab=1.6, cex.axis=1.7, cex.main=1.7, cex.sub=1.7)\nhist(uri.ser.modules$rowGroups, col = \"yellow\", main = \"Individuals by modules\", xlab = \"Serum and urine combined\", cex.lab=1.6, cex.axis=1.7, cex.main=1.7, cex.sub=1.7)\ndev.off()\n\n# Identity between modules ------------------------------------------------\n## identity function (in ISA_functions.R file) used to calculate the percentage of identity between modules \n## either of the same biological fluid or of modules constructed using different samples (for example urine and serum)\n\n# Overlap of individuals or ppms present in urine modules\nidentity.urine <- identity(data1 = urine, data2 = urine, data.isa1 = urine.isa, data.isa2 = urine.isa, \n         modules1 = urine.modules, modules2 = urine.modules, sel = 0)\nidentity.urine.col <- identity(data1 = urine, data2 = urine, data.isa1 = urine.isa, data.isa2 = urine.isa, \n                           modules1 = urine.modules, modules2 = urine.modules, sel = 0, Col = TRUE)\n# Overlap of individuals or ppms present in serum modules\nidentity.serum <- identity(data1 = serum, data2 = serum, data.isa1 = serum.isa, data.isa2 = serum.isa, \n                           modules1 = serum.modules, modules2 = serum.modules, sel = 0)\nidentity.serum.col <- identity(data1 = serum, data2 = serum, data.isa1 = serum.isa, data.isa2 = serum.isa, \n                               modules1 = serum.modules, modules2 = serum.modules, sel = 0, Col = TRUE)\n\n# look for similarity of modules between urine and serum \n# (selection of row and columns containings at least one value > 0.3)\nidentity.urine.serum <- identity(data1 = urine, data2 = serum, data.isa1 = urine.isa, data.isa2 = serum.isa, \n                                 modules1 = urine.modules, modules2 = serum.modules, sel = 0.3)\n# Overlap of individuals in modules created using the combined dataset (urine-serum)\nidentity.uri.ser <- identity(data1 = uri.ser, data2 = uri.ser, data.isa1 = uri.ser.isa, data.isa2 = uri.ser.isa, \n                                 modules1 = uri.ser.modules, modules2 = uri.ser.modules, sel = 0)\nidentity.uri.ser.sel <- identity(data1 = uri.ser, data2 = uri.ser, data.isa1 = uri.ser.isa, data.isa2 = uri.ser.isa, \n                             modules1 = uri.ser.modules, modules2 = uri.ser.modules, sel = 0.8)\n\n\n## Visualization\n#urine\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/individuals_similarity_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.urine,\n          main = \"Urinary module having similar individuals\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette,\n          dendrogram = \"none\", Colv=\"NA\", Rowv = \"NA\", keysize = 0.5,\n          key.title = \"Identity\", key.xlab = NA, breaks = col_breaks, labRow = FALSE, labCol = FALSE)\ndev.off()\n\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/ppm_similarity_urine\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.urine.col,\n          main = \"Urinary module having similar ppm values\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette,\n          dendrogram = \"none\", Colv=\"NA\", Rowv = \"NA\", keysize = 0.5,\n          key.title = \"Identity\", key.xlab = NA, breaks = col_breaks, labRow = FALSE, labCol = FALSE)\ndev.off()\n\n# example of similar urine modules: 4 subjects of module 149 are present in module 147 (5 subjects). \n# 21 of the 23 ppms of module 147 are present in module 149 (24 ppms)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_similarity_urine_ex\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\npar(mfrow=c(1,2))\nisa2image(urine, data.isa = urine.isa, type = \"isa\", n = 147)\nisa2image(urine, data.isa = urine.isa, type = \"isa\", n = 149)\ndev.off()\n\n# serum\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/individuals_similarity_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.serum,\n          main = \"Serum module having similar individuals\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette,\n          dendrogram = \"none\", Colv=\"NA\", Rowv = \"NA\", keysize = 0.5,\n          key.title = \"Identity\", key.xlab = NA, breaks = col_breaks, labRow = FALSE, labCol = FALSE)\ndev.off()\n\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/ppm_similarity_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.serum.col,\n          main = \"Serum module having similar ppm values\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette,\n          dendrogram = \"none\", Colv=\"NA\", Rowv = \"NA\", keysize = 0.5,\n          key.title = \"Identity\", key.xlab = NA, breaks = col_breaks, labRow = FALSE, labCol = FALSE)\ndev.off()\n\n## urine versus serum modules\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_similarity_urine_vs_serum\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.urine.serum, cellnote = identity.urine.serum, notecex= 0.7,\n          main = \"Matching individuals in serum and urine modules\", margins = c(7,7), xlab = \"Serum\", ylab = \"Urine\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette,\n          dendrogram = \"none\", Colv=\"NA\", Rowv = \"NA\", keysize = 0.5, cexRow = 1.2, cexCol = 1.2,\n          key.title = \"Identity\", key.xlab = NA, breaks = col_breaks)\ndev.off()\n\n\nhead(serum.modules)\n## serum -> columns\n## urine -> rows of identity.urine.serum\n\n## change row and columns names the same as serum.modules (or urine.modules)\ncolnames(identity.urine.serum) <- gsub(pattern = \"mod\", replacement = \"Module\", colnames(identity.urine.serum))\nrownames(identity.urine.serum) <- gsub(pattern = \"mod\", replacement = \"Module\", rownames(identity.urine.serum))\n\n## correct the identity value of two modules by the number of individuals that are present in the modules\nid_es <- matrix(NA, nrow(identity.urine.serum), ncol(identity.urine.serum))\nfor(j in 1:ncol(identity.urine.serum)){\n  n = serum.modules[colnames(identity.urine.serum)[j],][2]\n  for(i in 1:nrow(identity.urine.serum)){\n    m = urine.modules[rownames(identity.urine.serum)[i],][2]\n    id_es[i,j] <- identity.urine.serum[i,j]/(m+n)[,1]\n  }\n}\n\ncolnames(id_es) <- colnames(identity.urine.serum)\nrownames(id_es) <- rownames(identity.urine.serum)\n\nheatmap.2(round(id_es/(max(id_es)), 2), cellnote = round(id_es/(max(id_es)), 2), notecex= 0.7,\n          main = \"Matching individuals in serum and urine modules\", margins = c(7,7), xlab = \"Serum\", ylab = \"Urine\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette,\n          dendrogram = \"none\", Colv=\"NA\", Rowv = \"NA\", keysize = 0.5, cexRow = 1.2, cexCol = 1.2,\n          key.title = \"Identity\", key.xlab = NA, breaks = col_breaks)\npar(mfrow = c(1,2))\nisa2image(serum, data.isa = serum.isa, type = \"isa\", n = 197)\nisa2image(urine, data.isa = urine.isa, type = \"isa\", n = 30)\n\n\n# example of similar modules\n## plot modules (example of two modules with similar individuals)\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_es\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\npar(mfrow = c(1,2))\nisa2image(data = serum, type = \"isa\", data.isa = serum.isa, n = 11, cex = 1)\nisa2image(data = urine, type = \"isa\", data.isa = urine.isa, n = 1, cex = 1)\ndev.off()\n\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_es2_\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\npar(mfrow = c(1,2))\nisa2image(data = serum, type = \"isa\", data.isa = serum.isa, n = 115, cex = 1)\nisa2image(data = urine, type = \"isa\", data.isa = urine.isa, n = 257, cex = 1)\ndev.off()\n\n# Combined urine and serum dataset\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_similarity_uri_ser_joint\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.uri.ser,\n          main = \"Identity between modules \\n created using the combined urine and serum dataset\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette, dendrogram = \"none\",\n          Colv=\"NA\", Rowv = \"NA\", keysize = 0.5, key.title = \"Identity\", key.xlab = NA, breaks = col_breaks,\n          labRow = FALSE, labCol = FALSE)\n\ndev.off()\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/module_similarity_uri_ser_joint_sel\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nheatmap.2(identity.uri.ser.sel, cellnote = identity.uri.ser.sel, notecex= 0.5,\n          main = \"Identity between modules \\n created using the combined urine and serum dataset\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", col=my_palette, dendrogram = \"none\",\n          Colv=\"NA\", Rowv = \"NA\", keysize = 0.5, key.title = \"Identity\", key.xlab = NA, breaks = col_breaks)\n\ndev.off()\n\npar(mfrow = c(1,2))\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 124)\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 24)\n\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 43)\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 181)\n\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 83)\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 64)\n\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 224)\nisa2image(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 193)\n\nisaColNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 193)\n\n-------------\n\n# idea: identity matrix between individuals and ppms -> one minus the other -> max of absolute value\n# more differences between concordance module individuals or ppms!\n\n-------------\n\n### correlation matrix between metabolic feature in modules created using urine and serum \n# databases having similar individuals\n## module 11 in serum and module 1 in urine (example july 2017)\nisaRow = serum.isa$rows[, 115] != 0\nisaCol = serum.isa$columns[, 115] != 0\nmodule.ser <- t(as.matrix(serum[isaRow, isaCol, drop=FALSE]))\n\nisaRow = urine.isa$rows[, 257] != 0\nisaCol = urine.isa$columns[, 257] != 0\nmodule.ur <- t(as.matrix(urine[isaRow, isaCol, drop=FALSE]))\n\nmod.ur <- module.ur[,colnames(module.ur) %in% colnames(module.ser)]\nmod.ser <- module.ser[,colnames(module.ser) %in% colnames(module.ur)]\n\ni=4\nplot(as.numeric(sapply(strsplit(rownames(mod.ur), \"_\"), \"[[\", 2)), mod.ur[,i], pch = 19, col = \"yellow\")\npoints(as.numeric(sapply(strsplit(rownames(mod.ser), \"_\"), \"[[\", 2)), mod.ser[,i], pch = 19, col = \"red\")\n\n\nppm.u <- as.numeric(sapply(strsplit(rownames(mod.ur), \"_\"), \"[[\", 2))\nppm.s <- as.numeric(sapply(strsplit(rownames(mod.ser), \"_\"), \"[[\", 2))\n\ni = 1\nplot(mod.ser[,i], mod.ur[,i][sapply(ppm.s, function(x) which.min(abs(ppm.u-x)))])\nsapply(ppm.u, function(x) which.min(abs(ppm.s-x)))\n\n# plot(sort(mod.ur[,1]), sort(mod.ser[,1])) no sense!\n\nintensity_correlation <- matrix(NA, nrow(mod.ser), nrow(mod.ur))\nfor(i in 1:nrow(mod.ser)){\n  for(j in 1:nrow(mod.ur)){\n    r <- cor(mod.ser[i,], mod.ur[j,], method = \"pearson\")\n    intensity_correlation[i,j] <- round(r,2)\n  }\n}\nrownames(intensity_correlation) <- sapply(strsplit(rownames(mod.ser), \"_\"), \"[[\", 2)\ncolnames(intensity_correlation) <- sapply(strsplit(rownames(mod.ur), \"_\"), \"[[\", 2)\n\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/corr_matrix\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\n \nheatmap.2(intensity_correlation, cellnote = intensity_correlation, notecex= 0.8, margins = c(7,7),\n          main = \"Intensity correlation\", cexRow = 1.2, cexCol = 1.2, xlab = \"ppm Urine\", ylab = \"ppm Serum\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", dendrogram = \"none\",\n          Colv=\"NA\", Rowv = \"NA\", keysize = 0.7, key.title = \"Identity\", key.xlab = NA)\n  dev.off()\npng(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/corr_plot\",\n           Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\nplot(mod.ser[\"ppm_2.3066\",], mod.ur[ \"ppm_1.0186\",], pch = 19)\nabline(lm(mod.ur[12,]~mod.ser[7,]), col=\"red\", lwd = 2)\ndev.off()\nhist(urine[,\"ppm_1.0186\"],20) ## to have an idea about the intensity distribution of this spectral position\nhist(serum[,\"ppm_2.3066\"], 20)\n\n# PPA ---------------------------------------------------------------------\nser_ur <- list(as.matrix(t(serum)), as.matrix(t(urine)))\nmetabo.ppa.def <- ppa(ser_ur) # resulting in too many modules\nmetabo.ppa <- ppa(ser_ur, thr.row1 = seq(1.5, 2.5, by = 0.1), thr.row2 = seq(1.5, 2.5, by = 0.1), thr.col = seq(2,3, by = 0.1))\n\nsave(metabo.ppa.def, file = \"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/ppa20170812.RData\")\nload(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/ppa20170812.RData\")\nmetabo.module.info <- isaModules(data = metabo.ppa.def, type = \"ppa\")\n\nhist(metabo.module.info$colGroups)\nhist(metabo.module.info2$colGroups)\nhist(metabo.module.info$row1Groups)\n\n## ppa plot\n\nisa2image(data = serum, data2 = urine, type = \"ppa\", data.isa = metabo.ppa.def,\n          n = 29, name1 = \"serum\", name2 = \"urine\")\n\nisa2image(data = serum, data2 = urine, type = \"ppa\", data.isa = metabo.ppa2,\n          n = 44, name1 = \"serum\", name2 = \"urine\")\n\n\n# Cross correlation -------------------------------------------------------\nccf(x = as.matrix(data.frame(ppm = es.ppm, height = es.score)), \n    y = as.numeric(as.matrix(data.frame(ppm = hmdb$ppm[hmdb$HMDB.ID == \"HMDB00157\"], \n                                        height = hmdb$adjusted_height[hmdb$HMDB.ID == \"HMDB00157\"]))), type = \"correlation\"))\n\n\nhmdb <- read.table(\"C://Mimi/Stage_CBG/1.METABOMATCHING/Files/Metabolite/hmdb.20160809.180.slop\", h = T)\n\nppm.corr <- matrix(NA, nrow = nrow(urine.modules), ncol = length(unique(hmdb$HMDB.ID)))\nfor(i in 1:nrow(urine.modules)){\n  ppm.u <- as.numeric(sapply(strsplit(isaColNames(data = urine, type = \"isa\", data.isa = urine.isa, \n                                                  n = i), \"_\"), \"[[\", 2))\n  for(j in 1:length(unique(hmdb$HMDB.ID))){\n    ppm.hmdb <- hmdb$ppm[hmdb$HMDB.ID  == unique(hmdb$HMDB.ID)[j]]\n    ppm.tot=NULL\n    for(ppm.i in hmdb$ppm[hmdb$HMDB.ID==unique(hmdb$HMDB.ID)[j]]){\n      ppm  <- ppm.u[findInterval((ppm.u), c((ppm.i-0.03), (ppm.i+0.03)), rightmost.closed = T)==1]\n      ppm.tot <- unique(c(ppm.tot, ppm))\n    }\n    perc <- length(ppm.tot)/(length(ppm.u)+length(ppm.hmdb))\n    ppm.corr[i,j] <- perc\n  }\n}\ncolnames(ppm.corr) <- unique(hmdb$HMDB.ID)\nrownames(ppm.corr) <- rownames(urine.modules)\n\nppm.max <- data.frame(module = paste0(\"Module\", apply(ppm.corr, MARGIN = 2, FUN = which.max)), \n                      perc = round(apply(ppm.corr, MARGIN = 2, FUN = max), 2))\n\n### \"pseudospectrum\" image using isa score\nes <- isaColNames(urine, data.isa = urine.isa, type =\"isa\", n=252)\nes.ppm <- as.numeric(sapply(strsplit(isaColNames(urine, data.isa = urine.isa, type = \"isa\", n = 252), \"_\"), \"[[\", 2))\nes.score <- urine.isa$columns[colnames(urine) %in% es, 252]\ncolnames(urine)[138]\nmatch(es, colnames(urine))\n\n\n### \"pseudospectrum\" image using isa score\nes <- isaColNames(serum, data.isa = serum.isa, type =\"isa\", n=250)\nserum.isa$columns[colnames(serum) %in% es, 250]\ncolnames(serum)[138]\nmatch(es, colnames(serum))\n\nplot(serum.isa$columns[colnames(serum) %in% es, 250], type = \"h\")\n\n\n\n\nplot(c(es.ppm, hmdb$ppm[hmdb$HMDB.ID == \"HMDB00157\"]), c(es.score, -hmdb$adjusted_height[hmdb$HMDB.ID == \"HMDB00157\"]), type = \"h\")\nplot(hmdb$ppm[hmdb$HMDB.ID == \"HMDB00157\"], hmdb$adjusted_height[hmdb$HMDB.ID == \"HMDB00157\"], type = \"h\")\n\n\n\n# Phenotype ---------------------------------------------------------------\npheno           <- read.csv(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/traits.raw.colaus1.20161116.csv\", h = F, sep = \",\", stringsAsFactors = T)\npheno_transf    <- read.csv(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/traits.transformed.colaus1.20161116.csv\", h = F, sep = \",\")\npheno_names     <- read.csv(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/data/trait_names.raw.colaus1.20161116.csv\", h = F, sep = \",\")\ncolnames(pheno) <- c(\"ID\", as.character(pheno_names$V1))\ncolnames(pheno_transf) <- c(\"ID\", as.character(pheno_names$V1))\npheno$ID        <- paste0(\"id\", pheno$ID)\npheno_transf$ID <- paste0(\"id_\", pheno_transf$ID)\nrm(pheno_names)\n\n## phenotype information\n# classes extraction function:\nclasses <- function(data, from, to, by, variable_name, variable_name2) {\n  data_df <- data.frame(data)\n  data_df$variable_class <- cut(as.numeric(unlist(data[colnames(data) %in% variable_name])), seq(from, to, by))\n  return(as.data.frame(table(data_df[,colnames(data_df) %in% c(\"variable_class\", variable_name2)])))\n}\n\n# Gender distribution with age\nage_classes <- classes(data = pheno, from = 30, to = 80, by = 5, variable_name = \"AGE\", variable_name2 = \"SEX\")\n\n# Pyramidal plot\nggplot() +\n  geom_col(aes(age_classes$variable_class[age_classes$SEX == 0], \n               age_classes$Freq[age_classes$SEX == 0], fill = \"Sex 0\", width = 0.5)) +\n  geom_col(aes(age_classes$variable_class[age_classes$SEX == 1], \n               -age_classes$Freq[age_classes$SEX == 1], fill = \"Sex 1\", width = 0.5)) +\n  scale_fill_manual(values=c(\"#FF0000\", \"#0000CC\")) +\n  labs(title=\"Age and Gender distribution\", y =\"Number of subjects\", x = \"Age classes\", fill = \"Gender\") +\n  coord_flip() +\n  theme_bw() +\n  theme(axis.text=element_text(size=16, face=\"bold\"),axis.title=element_text(size=16, face=\"bold\"))\n\npheno$age_class <- cut(pheno$AGE, seq(30, 80, by = 5))\nboxplot(pheno$GLUC~pheno$age_class)\nboxplot(pheno$SBP~pheno$age_class)\nboxplot(pheno$BMI~pheno$age_class)\nboxplot(pheno$TRIG~pheno$age_class)\nboxplot(pheno$HDLCH~pheno$age_class)\nboxplot(pheno$CHOL~pheno$age_class)\nboxplot(pheno$LDLCH~pheno$age_class)\nboxplot(pheno$ADTRN~pheno$age_class)\n\nboxplot(pheno$GLUC~pheno$SEX)\nboxplot(pheno$SBP~pheno$SEX)\nboxplot(pheno$BMI~pheno$SEX)\nboxplot(pheno$TRIG~pheno$SEX)\nboxplot(pheno$HDLCH~pheno$SEX)\nboxplot(pheno$CHOL~pheno$SEX)\nboxplot(pheno$LDLCH~pheno$SEX)\nboxplot(pheno$ADTRN~pheno$SEX)\n\nplot(pheno$AGE, pheno$GLUC)\n\nmodel <- lm(CHOL ~ SEX + AGE + BMI + PHYACT, data = pheno)\nmodel2 <- glm(CHOL ~ SEX + AGE + BMI + PHYACT, data = pheno)\nsummary(lm(CHOL ~ as.factor(SEX) + AGE + BMI + as.factor(PHYACT) + as.factor(SMK), data = pheno))\nsummary(lm(SBP ~ SEX + AGE + BMI + PHYACT + SMK, data = pheno))\nsummary(lm(TRIG ~ SEX + AGE + BMI + PHYACT, data = pheno))\nsummary(lm(HDLCH ~ SEX + AGE + BMI + PHYACT, data = pheno))\nsummary(lm(LDLCH ~ SEX + AGE + BMI + PHYACT, data = pheno))\nsummary(lm(ADTRN ~ SEX + AGE + BMI + PHYACT, data = pheno))\n\nsummary(lm(CHOL ~ BMI, data = pheno))\n\n## Looking if some module are related to any kind of phenotype\n## selecti individuals present in the metabolomics data\nphen <- pheno\nphen <- phen[phen$ID %in% rownames(urine),]\nphen <- phen[order(phen$ID),]\nphen <- unique(phen)\nattach(phen)\n\nphen <- pheno_transf[pheno_transf$ID %in% rownames(urine),]\nphen <- unique(phen)\n\n### Variable distribution\n## Look at the densities distribution, at the normal qqplot and perform the shapiro-wilk test to check normality.\ncovariables <- c(\"GLUC\", \"TRIG\", \"HDLCH\", \"CHOL\", \"LDLCH\", \"SBP\")\n\nfor(trait in covariables){\n  png(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/normality_test/\",\n             trait, Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\n  plot(density(na.omit(phen[,trait])), main = paste0(trait, \" Density Plot\"))\n  dev.off()\n  png(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/normality_test/\",\n             trait, \"qqplot\", Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\n  qqnorm(phen[,trait], main = paste0(trait, \" Normal Q-Q Plot\"))\n  qqline(phen[,trait], col = 2)\n  text(-2, max(phen[,trait], na.rm = T)-(max(pheno_transf[,trait], na.rm = T)/10), \n       paste0(\"Shapiro-Wilk normality test \\n p = \", shapiro.test(phen[,trait])$p))\n  dev.off()\n}\n\n## transformed data:\nfor(trait in covariables[c(1,2,6)]){\n  png(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/normality_test/\",\n             trait, \"tranf_\", Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\n  plot(density(na.omit(pheno_transf[,trait])), main = paste0(\"Transformed \", trait, \" Density Plot\"))\n  dev.off()\n  png(paste0(\"C://Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/result/figure/normality_test/\",\n             trait, \"tranf_\", \"qqplot\", Sys.Date(), \".png\"), width = 23, height = 20, units = 'cm', res = 300)\n  qqnorm(pheno_transf[,trait], main = paste0(\"Transformed \", trait, \" Normal Q-Q Plot\"))\n  qqline(pheno_transf[,trait], col = 2)\n  text(-2, max(pheno_transf[,trait], na.rm = T)-(max(pheno_transf[,trait], na.rm = T)/10), \n       paste0(\"Shapiro-Wilk normality test \\n p = \", shapiro.test(pheno_transf[,trait][1:5000])$p))\n  dev.off()\n}\n\n# serum:\nid.ser <- isaRowNames(serum, data.isa = serum.isa, type = \"isa\", n = 1)\nid.ur  <- isaRowNames(urine, data.isa = urine.isa, type = \"isa\", n = 1)\n\nt.test.variable <- function(phenotype.data, metabo.data, metabo.isa, variable1){\n  p_val = NULL\n  for(i in 1:nrow(metabo.isa$seeddata)){\n    id <- isaRowNames(data = metabo.data, data.isa = metabo.isa, type = \"isa\", n = i)\n    if(length(id)==1) {\n      p <- NA\n    } else {\n      if(length(na.omit(phenotype.data[colnames(phenotype.data) %in% variable1][phenotype.data$ID %in% id,])) == 1) {\n        p <- NA\n      } else {\n        p <- format(t.test(na.omit(phenotype.data[colnames(phenotype.data) %in% variable1][phenotype.data$ID %in% id,]), \n                           phenotype.data[colnames(phenotype.data) %in% variable1][!phenotype.data$ID %in% id,])$p.value, \n                    digits = 2)\n      }\n    }\n    p_val <- c(p_val, as.numeric(p))\n  }\n  return(data.frame(modules = paste0(\"Module\", 1:nrow(metabo.isa$seeddata)), p_val))  \n}\n\nage.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"AGE\")\nsex.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"SEX\")\nchol.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"CHOL\")\nGLUC.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"GLUC\")\nSBP.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"SBP\")\nBMI.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"BMI\")\nTRIG.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"TRIG\")\nHDLCH.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"HDLCH\")\nLDLCH.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"LDLCH\")\nSMK.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"SMK\")\nPHYACT.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"PHYACT\")\nADTRN.test <- t.test.variable(phenotype.data = phen, metabo.data = serum, metabo.isa = serum.isa, variable1 = \"ADTRN\")\n\np_val_result <- data.frame(p_val.age = age.test$p_val, p_val.sex = sex.test$p_val, p_val.chol = chol.test$p_val, \n                           p_val.GLUC = GLUC.test$p_val, p_val.SBP = SBP.test$p_val, p_val.BMI = BMI.test$p_val, \n                           p_val.TRIG = TRIG.test$p_val, p_val.HDLCH = HDLCH.test$ p_val, p_valLDLCH = LDLCH.test$p_val, \n                           p_val.SMK = SMK.test$p_val, p_val.PHYACT = PHYACT.test$p_val, p_val.ADTRN = ADTRN.test$p_val)\n\nrownames(p_val_result) <- paste0(\"Module\", 1:nrow(serum.modules))\np_val_result <- p_val_result[apply(p_val_result, MARGIN = 1, function(x) any(x <= 0.05/nrow(serum.modules))), ]\n\n\n\nplot(phen$CHOL)\npoints(phen$CHOL[phen$ID %in% isaRowNames(serum, data.isa = serum.isa, type = 'isa', n = 93)], col = \"red\", pch = 19)\n\nt.test(phen$AGE[phen$ID %in% id.ser], phen$AGE[!phen$ID %in% id.ser])\nt.test(phen$AGE[phen$ID %in% id.ur], phen$AGE[!phen$ID %in% id.ur])$p.value\n\nplot(phen$AGE, phen$GLUC, pch = 19)\npoints(phen$AGE[phen$ID %in% id.ser], phen$GLC[phen$ID %in% id.ser], col = \"red\", pch = 19)\n\n\n\n\n# Phenotype - Module correaltion ------------------------------------------\n\n# phenotype = dependent variable (\"GLUC\", \"TRIG\", \"HDLCH\", \"CHOL\", \"LDLCH\", \"SBP\")\n# modules = independent variables. use the score to analyse the correlation with the phenotype!\n# co-variables = \"AGE\", \"SEX\", \"BMI\", \"SMK\", \"PHYACT\", \"ADTRN\" \n\n  \n# Multiple linear regression model with phenotype ~ module's score + covariables\ncovariables <- c(\"GLUC\", \"TRIG\", \"HDLCH\", \"CHOL\", \"LDLCH\", \"SBP\")\n\n## selection of modules having higher robustness\nurine.modules.uni[order(urine.modules.uni$rob, decreasing = T),]\nurine.mod.sel <- urine.modules.uni[urine.modules.uni$rob > 40,]\n\n## calculate score for every subjects given a certain number of features\n## example for module 4 of urine\n\nppm4 <- isaColNames(urine, data.isa = urine.uni, type = \"isa\", n = 4)\nmodule4 <- urine[, ppm4]\n\nes4 <- 1/(apply(module4, 1, sd)/min(apply(module4, 1, sd)))\nsummary(lm(phen[,covariables[j]] ~ es4 + SEX + AGE + BMI + PHYACT + SMK + ADTRN, data = phen))\n\nmod4isa <- isa(module4, thr.col = 0, thr.row = 0)\n\nlinear_regression_result <- matrix(NA, ncol(urine.uni$rows), 6)\nfor(j in 1:length(covariables)){\n  for (i in 1:ncol(urine.uni$rows)){\n    p <- summary(lm(phen[,covariables[j]] ~ urine.uni$rows[,i] + SEX + AGE + BMI + PHYACT + SMK + ADTRN, data = phen))$coefficients[,4] [2]\n    linear_regression_result[i,j] <- round(p,2)\n  }\n}\n\ncolnames(linear_regression_result) <- covariables\nrownames(linear_regression_result) <- paste0(\"Module\", 1:ncol(urine.uni$rows))\n\nlinear_regression_result <- linear_regression_result[rownames(urine.mod.sel),]\n\n\nheatmap.2(linear_regression_result, cellnote = linear_regression_result, notecex= 0.7, margins = c(7,7),\n          main = \"Linear regression result\", cexRow = 0.8, cexCol = 1.2, xlab = \"\", ylab = \"\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", dendrogram = \"none\", \n          col = colorRampPalette(c(\"red\", \"green\"))(n = 199), breaks = c(seq(0,0.05,length=100),             # for red\n                         seq(0.3,1,length=100)), Colv=\"NA\", Rowv = \"NA\", \n          keysize = 0.7, key.title = \"p-value\", key.xlab = NA)\n\n\ni = 53 # HDL and tot Chol significant\nid <- isaRowNames(urine, data.isa = urine.uni, type = \"isa\", n = i)\n\nplot(phen$AGE, phen$TRIG)\npoints(phen$AGE[phen$ID %in% id], phen$TRIG[phen$ID %in% id], col = \"red\", pch = 19)\n\ni =4\n\n## serum\nserum.mod.sel <- serum.modules.uni[serum.modules.uni$rob > 30,]\n\nlinear_regression_result <- matrix(NA, ncol(serum.uni$rows), 6)\nfor(j in 1:length(covariables)){\n  for (i in 1:ncol(serum.uni$rows)){\n    p <- summary(lm(phen[,covariables[j]] ~ serum.uni$rows[,i] + SEX + AGE + BMI + PHYACT + SMK + ADTRN, data = phen))$coefficients[,4] [2]\n    linear_regression_result[i,j] <- round(p,2)\n  }\n}\n\n\ncolnames(linear_regression_result) <- covariables\nrownames(linear_regression_result) <- paste0(\"Module\", 1:ncol(serum.uni$rows))\n\nlinear_regression_result <- linear_regression_result[order(serum.modules.uni$rowGroups, decreasing = T),]\n\n\nheatmap.2(linear_regression_result, cellnote = linear_regression_result, notecex= 0.7, margins = c(7,7),\n          main = \"Linear regression result\", cexRow = 0.8, cexCol = 1.2, xlab = \"\", ylab = \"\",\n          notecol=\"black\", density.info=\"none\", trace=\"none\", dendrogram = \"none\", \n          col = colorRampPalette(c(\"red\", \"green\"))(n = 199), breaks = c(seq(0,0.05,length=100),             # for red\n                                                                         seq(0.3,1,length=100)), Colv=\"NA\", Rowv = \"NA\", \n          keysize = 0.7, key.title = \"p-value\", key.xlab = NA)\n\nserum.modules.uni[order(serum.modules.uni$rowGroups, decreasing = T),]\n",
    "created" : 1504677788322.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2730502933",
    "id" : "3E0A7728",
    "lastKnownWriteTime" : 1504264668,
    "last_content_update" : 1504264668,
    "path" : "/media/mirjam/OS/Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/master_project/metabo_isa.R",
    "project_path" : "metabo_isa.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}