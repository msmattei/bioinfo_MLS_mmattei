{
    "collab_server" : "",
    "contents" : "# serum <- serum-(rep(rowMeans(serum), each = ncol(serum))/rep(apply(serum, 1, sd, na.rm = TRUE), each = ncol(serum))) #Normalize subjects\n# serum <- serum-(rep(colMeans(serum), each = ncol(serum))/rep(apply(serum, 2, sd, na.rm = TRUE), each = ncol(serum))) #Normalize variables\n# apply(serum, 2, sd)\n\n# urine <- urine-(rep(rowMeans(urine), each = ncol(urine))/rep(apply(urine, 1, sd, na.rm = TRUE), each = ncol(urine))) #Normalize subjects\n# urine <- urine-(rep(colMeans(urine), each = ncol(urine))/rep(apply(urine, 2, sd, na.rm = TRUE), each = ncol(urine))) #Normalize variables\n\n\n# scratch -----------------------------------------------------------------\n\nisa2image(urine, data.isa = urine.isa, type = \"isa\", n = 5)\ncolnames(ppm.corr)[ppm.corr[5,] == max(ppm.corr[5,])]\npar(mfrow = c(2,1))\nplot(hmdb$ppm[hmdb$HMDB.ID==\"HMDB04983\"], hmdb$adjusted_height[hmdb$HMDB.ID==\"HMDB04983\"], type = \"h\", \n     xlim = c(0,9))\nplot(ppm.u, urine[\"id_996\",unlist(lapply(ppm.u, grep, colnames(urine)))], type = \"h\", xlim = c(0,9))\n\nmax(ppm.corr)\n\nurine[5, 1:10]\nmetabolome[\"102\",1:10]\nisa2image(urine, data.isa = urine.isa, type = \"isa\", n = 1)\n\n\n# age classes extraction function:\nclasses <- function(data, intervals, steps, age, sex, sex_variable) {\n  classes_ma <- matrix(NA, 0, 3)\n  for(interval in intervals){\n    if (grepl(\"<\", interval)) {\n      classes_ma <- rbind(classes_ma, c(sum(data[,colnames(data) %in% age] < na.omit(as.numeric(unlist(strsplit(interval, \"<\"))))[1], na.rm = T), \n                                        sum(data[,colnames(data) %in% age] < na.omit(as.numeric(unlist(strsplit(interval, \n                                                                                                                \"<\"))))[1] & data[,colnames(data) %in% sex] == sex_variable[1], na.rm = T), \n                                        sum(data[,colnames(data) %in% age] < na.omit(as.numeric(unlist(strsplit(interval, \n                                                                                                                \"<\"))))[1] & data[,colnames(data) %in% sex] == sex_variable[2], na.rm = T)))\n    } else if (grepl(\">\", interval)) {\n      classes_ma <- rbind(classes_ma, c(sum(data[,colnames(data) %in% age] > na.omit(as.numeric(unlist(strsplit(interval,\n                                                                                                                \">\"))))[1], na.rm = T), \n                                        sum(data[,colnames(data) %in% age] > na.omit(as.numeric(unlist(strsplit(interval,\n                                                                                                                \">\"))))[1] & data[,colnames(data) %in% sex] == sex_variable[1], na.rm = T), \n                                        sum(data[,colnames(data) %in% age] > na.omit(as.numeric(unlist(strsplit(interval,\n                                                                                                                \">\"))))[1] & data[,colnames(data) %in% sex] == sex_variable[2], na.rm = T)))\n    } else {\n      classes_ma <- rbind(classes_ma, c(sum(data[,colnames(data) %in% age] %in% seq(as.numeric(unlist(strsplit(interval, \n                                                                                                               \"-\")))[1], as.numeric(unlist(strsplit(interval, \"-\")))[2], by = steps)), \n                                        sum(data[,colnames(data) %in% age]  %in% seq(as.numeric(unlist(strsplit(interval, \n                                                                                                                \"-\")))[1], as.numeric(unlist(strsplit(interval, \"-\")))[2], \n                                                                                     by = steps) & data[,colnames(data) %in% sex] == sex_variable[1]), \n                                        sum(data[,colnames(data) %in% age]  %in% seq(as.numeric(unlist(strsplit(interval,\n                                                                                                                \"-\")))[1], as.numeric(unlist(strsplit(interval, \"-\")))[2], \n                                                                                     by = steps) & data[,colnames(data) %in% sex] == sex_variable[2])))\n    }\n  }\n  return(as.data.frame(classes_ma))\n}\n\nintervals <- c(\"<35\", \"35-40\", \"40-45\", \"45-50\", \"50-55\", \"55-60\", \"60-65\", \"65-70\", \"70-75\", \">75\")\nclasses_age <- classes(data = pheno, intervals = intervals, steps = 0.1, sex = \"SEX\", age = \"AGE\", sex_variable = c(0,1))\nclasses_age <- cbind(classes_age, intervals)\ncolnames(classes_age) <- c(\"all\", \"sex 0\", \"sex 1\", \"age\")\n\n\npheno$age_class <- cut(pheno$AGE, seq(30, 80, by = 5))\n\n\n\n\n\npheno$age_class <- cut(pheno$AGE, seq(30, 80, by = 5))\n\nlibrary(ggplot2)\nlibrary(plyr) \ninstall.packages(\"plotrix\")\nlibrary(plotrix)\n\npyramid.plot(as.numeric(classes_age[,2]), as.numeric(classes_age[,3]), labels = intervals)\n\nggplot(na.omit(pheno), aes(x = age_class, fill = as.factor(SEX))) +\n  geom_bar(position = \"dodge\") + \n  scale_fill_brewer(palette = \"Set1\") +\n  theme_bw()\n\nn1 <- ggplot(na.omit(pheno), aes(x = age_class, fill = as.factor(SEX))) + \n  geom_bar() + \n  scale_y_continuous(breaks = seq(-1500, 1500, 500), labels = paste0(as.character(c(seq(15, 0, -5), seq(5, 15, 5))), \"m\")) +\n  coord_flip() + \n  scale_fill_brewer(palette = \"Set1\") + \n  theme_bw()\n\nn1\n\nggplot(data=as.data.frame(classes_age)) +\n  geom_bar(aes(age,sex0,group=sex,fill=sex), stat = \"identity\",subset(pheno,pheno$SEX==\"0\")) +\n  geom_bar(aes(age,-sex1,group=sex,fill=sex), stat = \"identity\",subset(pheno,pheno$SEX==\"1\")) +\n  scale_y_continuous(breaks=seq(-100,40,10),labels=abs(seq(-100,40,10))) +\n  coord_flip()\n\n\nggplot(classes_age) +\n  geom_col(aes(age, classes_age$`sex 0`, fill=\"#0000CC\"), width = 0.5) +\n  geom_col(aes(age, -classes_age$`sex 1`), fill = \"#0000CC\", width = 0.5) +\n  scale_fill_manual(values=c(\"#FF0000\", \"#0000CC\")) +\n  coord_flip() + \n  theme_bw()\n\n\n\nZ <- t(as.matrix(1:100))\n\npal.1 <- colorRampPalette(c(\"blue\", \"cyan\", \"yellow\", \"red\"), bias=1)\npal.2 <- colorRampPalette(c(\"blue\", \"cyan\", \"yellow\", \"red\"), bias=3)\nmy_color <- colorRampPalette(c(\"blue\", \"red\"))(n = 10000)\n\nimage(Z, col=my_color)\nimage(Z, col=my_color, las=1, xlab=\"\",ylab=\"\",xaxt=\"n\",yaxt=\"n\")\n\nx=matrix(rnorm(100),nrow=10)*100\nxmin=0; xmax=100;\ncollist<-c(\"#053061\",'#2166AC','#4393C3','#92C5DE','#D1E5F0','#F7F7F7','#FDDBC7','#F4A582',\n           '#D6604D','#B2182B','#67001F')\nColorRamp<-colorRampPalette(collist)(10000)\nColorLevels<-seq(from=xmin, to=xmax, length=10000)\nColorUsed <- my_color[round(1+(min(module.n)-min(uri.ser))*10000/(max(uri.ser)-min(uri.ser))\n                                ) : round( (max(module.n)-min(uri.ser))*10000/(max(uri.ser)-min(uri.ser)) )]\n\nmin(module.n)\nmin(uri.ser)\n\n\n\n\ntable(isaColNames(urine, data.isa = urine.isa, type = \"isa\", n = 149\n) %in% isaColNames(urine, data.isa = urine.isa, type = \"isa\", n = 147))\n\ntable(isaRowNames(urine, data.isa = urine.isa, type = \"isa\", n = 147\n) %in% isaRowNames(urine, data.isa = urine.isa, type = \"isa\", n = 149))\n\n\n## joint urine serum datasets, plot two modules at the same time\nisaRow = uri.ser.isa$rows[, 124] != 0\nisaCol = uri.ser.isa$columns[, 124] != 0\nmodule.n <- t(as.matrix(uri.ser[isaRow, isaCol, drop=FALSE]))\nmodule.n <- module.n[unique(c(isaColNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 24), \n                              rownames(module.n))), ]\nimage(module.n, axes = F, main = \"Module 24 and 124\", col=ColorUsed)\nmtext(text=colnames(module.n), side=2, line=0.3, at=seq(0,1,l=ncol(module.n)), las=2, cex = 0.7)\nmtext(text=rownames(module.n), side=1, line=0.3, at=seq(0,1,l=nrow(module.n)), las=2, cex = 0.5)\n\nisaColNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", \n            n = 24) %in% isaColNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 124)\n\ntable(isaRowNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", \n                  n = 447) %in% isaRowNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 432))\nlength(isaRowNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 447))\nlength(isaRowNames(uri.ser, data.isa = uri.ser.isa, type = \"isa\", n = 432))\n\n\n\n## example of ppms\nppm.ser <- as.numeric(sapply(strsplit(isaColNames(serum, data.isa = serum.isa, type = \"isa\", n = 11), \"_\"), \"[[\", 2))\nppm.ur  <- as.numeric(sapply(strsplit(isaColNames(urine, data.isa = urine.isa, type = \"isa\", n = 1), \"_\"), \"[[\", 2))\n\n\n#correlation matrix representation (heatmap)\nmy_palette <- colorRampPalette(c(\"red\", \"yellow\", \"green\"))(n = 299)\ncol_breaks = c(seq(0,0.39,length=100),\n               seq(0.4,0.79,length=100),\n               seq(0.8,1,length=100))\n\n\nheatmap.2(sqrt(corr.matrix^2), \n          cellnote = round(corr.matrix, 2),\n          notecex= 0.7,\n          main = \"Correlation Matrix\",\n          notecol=\"black\",\n          density.info=\"none\",\n          trace=\"none\",       \n          dendrogram = \"none\",\n          Colv=\"NA\",\n          Rowv = \"NA\",\n          keysize = 0.5,\n          key.title = \"Identity\",\n          key.xlab = NA, \n          xlab = \"urinary ppm\", \n          ylab = \"serum ppm\", cexRow = 0.7, cexCol = 0.7,\n          col = my_palette, breaks = col_breaks)\n\n\n",
    "created" : 1502543614651.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2885989404",
    "id" : "F48CF370",
    "lastKnownWriteTime" : 1503995698,
    "last_content_update" : 1503995698599,
    "path" : "C:/Mimi/UNI/Master/MLS_BIOINFORMATICS/Master_Project_MLS/master_project/scratch.R",
    "project_path" : "scratch.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}