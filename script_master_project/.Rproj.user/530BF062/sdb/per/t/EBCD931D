{
    "collab_server" : "",
    "contents" : "## useful isa functions\n# Modules informations -----------------------------------------------------\nisaModules <- function(data.isa, type = c(\"isa\", \"ppa\")) {\n  if(type == \"isa\"){\n    colGroups <- matrix(NA, ncol(data.isa$rows))\n    rowGroups <- matrix(NA, ncol(data.isa$rows))\n    for (i in 1:ncol(data.isa$rows)) {\n      colGroups[i] <- sum(data.isa$columns[,i] != 0)\n      rowGroups[i] <- sum(data.isa$rows[,i] != 0)\n    }\n    modules <- data.frame(colGroups, rowGroups, rob = data.isa$seeddata$rob,  \n                          thr.row = data.isa$seeddata$thr.row, thr.col = data.isa$seeddata$thr.col)\n    colnames(modules) <- c(\"colGroups\", \"rowGroups\", \"rob\", \"thr.row\", \"thr.col\")\n    rownames(modules) <- paste0(\"Module\", 1:nrow(modules))\n  }\n  if(type == \"ppa\"){\n    colGroups <- matrix(NA, ncol(data.isa$rows1))\n    row1Groups <- matrix(NA, ncol(data.isa$rows1))\n    row2Groups <- matrix(NA, ncol(data.isa$rows2))\n    for (i in 1:ncol(data.isa$rows1)) {\n      colGroups[i] <- sum(data.isa$columns[,i] != 0)\n      row1Groups[i] <- sum(data.isa$rows1[,i] != 0)\n      row2Groups[i] <- sum(data.isa$rows2[,i] != 0)\n    }\n    modules <- data.frame(colGroups, row1Groups, row2Groups, rob = data.isa$seeddata$rob,  \n                          thr.row1 = data.isa$seeddata$thr.row1, \n                          thr.row2 = data.isa$seeddata$thr.row2, thr.col = data.isa$seeddata$thr.col)\n    colnames(modules) <- c(\"colGroups\", \"row1Groups\",\"row2Groups\", \"rob\", \"thr.row1\", \"thr.row2\", \"thr.col\")\n    rownames(modules) <- paste0(\"Module\", 1:nrow(modules))\n  }\n  print(modules)\n}\n# Extract module informations ----------------------------------------------------\nisaRowNames <- function(data, data2 = NULL, data.isa, type = \"isa\", n){\n  if(type == \"isa\"){\n    isaRow = data.isa$rows[, n] != 0\n    isaCol = data.isa$columns[, n] != 0\n    module.n <- as.matrix(data[isaRow, isaCol, drop=FALSE])\n    return(rownames(module.n))\n  }\n  if(type == \"ppa\"){\n    isaRow1 = data.isa$rows1[, n] != 0\n    isaRow2 = data.isa$rows2[, n] != 0\n    isaCol = data.isa$columns[, n] != 0\n    module.n1 <- t(data)[isaRow1, isaCol, drop=FALSE]\n    module.n2 <- t(data2)[isaRow2, isaCol, drop=FALSE]\n    return(list(data1 = colnames(module.n1), data2 = colnames(module.n2)))\n  }\n}\n\nisaColNames <- function(data, data2 = NULL, data.isa, type = \"isa\", n){\n  if(type == \"isa\"){\n    isaRow = data.isa$rows[, n] != 0\n    isaCol = data.isa$columns[, n] != 0\n    module.n <- as.matrix(data[isaRow, isaCol, drop=FALSE])\n    return(colnames(module.n))\n  }\n  if(type == \"ppa\"){\n    isaRow1 = data.isa$rows1[, n] != 0\n    isaRow2 = data.isa$rows2[, n] != 0\n    isaCol = data.isa$columns[, n] != 0\n    module.n1 <- t(data)[isaRow1, isaCol, drop=FALSE]\n    module.n2 <- t(data2)[isaRow2, isaCol, drop=FALSE]\n    return(list(data1 = rownames(module.n1), data2 = rownames(module.n2)))\n  }\n}\n\nisaScore <- function(data, data.isa, Row = FALSE, Col = FALSE, n){\n    isaRow = data.isa$rows[, n] != 0\n    isaNames <- rownames(data)[isaRow]\n    scoreRow <- data.frame(RowScore = data.isa$row[isaRow, n], row.names = isaNames)\n\n    isaCol = data.isa$columns[, n] != 0\n    isaNames <- colnames(data)[isaCol]\n    scoreCol <- data.frame(ColScore = data.isa$column[isaCol, n], row.names = isaNames)\n\n  return(list(scoreRow, scoreCol))\n}\n\n# Module visualization ----------------------------------------------------\n\nisa2image <- function(data, data2 = NULL, data.isa, type = \"isa\", n, name1 = NULL, name2 = NULL, cex = 0.6, color1 = \"red\", color2 = \"yellow\", all = FALSE){\n  if(type == \"isa\"){\n    colors <- colorRampPalette(c(color1, color2))(n = 10000)\n    isaRow = data.isa$rows[, n] != 0\n    isaCol = data.isa$columns[, n] != 0\n    module.n <- t(as.matrix(data[isaRow, isaCol, drop=FALSE]))\n    ColorUsed <- colors[round(1+(min(module.n)-min(data))*10000/(max(data)-min(data))) : round( (max(module.n)-min(data))*10000/(max(data)-min(data)) )]\n    image(module.n, axes = F, main = paste(\"Module\",  n), col=ColorUsed)\n    mtext(text=colnames(module.n), side=2, line=0.3, at=seq(0,1,l=ncol(module.n)), las=2, cex = cex)\n    mtext(text=rownames(module.n), side=1, line=0.3, at=seq(0,1,l=nrow(module.n)), las=2, cex = cex)\n    # if(all == TRUE){\n    #   allCol <- c(colnames(module.n), rownames(data)[!rownames(data) %in% colnames(module.n)])\n    #   allRow <- c(rownames(module.n), colnames(data)[!colnames(data) %in% rownames(module.n)])\n    #   image(as.matrix(t(data[allCol, allRow])), axes = F)\n    # }\n  }\n  if(type == \"ppa\"){\n    isaRow1 = data.isa$rows1[, n] != 0\n    isaRow2 = data.isa$rows2[, n] != 0\n    isaCol = data.isa$columns[, n] != 0\n    module.n1 <- t(data)[isaRow1, isaCol, drop=FALSE]\n    module.n2 <- t(data2)[isaRow2, isaCol, drop=FALSE]\n    par(mfrow = c(1,2))\n    image(module.n1, axes = F, main = paste(\"Module\",  n, name1))\n    mtext(text=colnames(module.n1), side=2, line=0.3, at=seq(0,1,l=ncol(module.n1)), las=2, cex = cex)\n    mtext(text=rownames(module.n1), side=1, line=0.3, at=seq(0,1,l=nrow(module.n1)), las=2, cex = cex)\n    image(module.n2, axes = F, main = paste(\"Module\",  n, name2))\n    mtext(text=colnames(module.n2), side=2, line=0.3, at=seq(0,1,l=ncol(module.n2)), las=2, cex = cex)\n    mtext(text=rownames(module.n2), side=1, line=0.3, at=seq(0,1,l=nrow(module.n2)), las=2, cex = cex)\n    par(mfrow = c(1,1))\n  }\n  if(all == TRUE){\n    isaRow <- c(rownames(data)[data.isa$rows[, n] != 0], rownames(data)[data.isa$rows[, n] == 0])\n    isaCol <- c(colnames(data)[data.isa$columns[, n] != 0], colnames(data)[data.isa$columns[, n] == 0])\n    module.n   <- t(as.matrix(data[isaRow, isaCol, drop=FALSE]))\n    image(module.n, axes = F, main = paste(\"Module\",  n))\n    mtext(text=colnames(module.n), side=2, line=0.3, at=seq(0,1,l=ncol(module.n)), las=2, cex = cex)\n    mtext(text=rownames(module.n), side=1, line=0.3, at=seq(0,1,l=nrow(module.n)), las=2, cex = cex)\n  }\n}\n\n\n\n# Identity function -------------------------------------------------------\n\n## Identity function\nidentity <- function(data1, data2, data.isa1, data.isa2, modules1, modules2, sel = 0, Col = FALSE){\n  id.matr <- matrix(NA, nrow = nrow(modules1), ncol = nrow(modules2))\n  if(Col == TRUE){\n    for(i in 1:nrow(modules1)){\n      id1 <- isaColNames(data = data1, type = \"isa\", data.isa = data.isa1, n = i)\n      for(j in 1:nrow(modules2)){\n        id2 <- isaColNames(data = data2, type = \"isa\", data.isa = data.isa2, n = j)\n        perc <- round(ifelse(length(id1) > length(id2), sum(id1 %in% id2)/length(id1), sum(id2 %in% id1)/length(id2)), 2)\n        id.matr[i,j] <- perc\n      }\n    }\n  } else {\n    for(i in 1:nrow(modules1)){\n      id1 <- isaRowNames(data = data1, type = \"isa\", data.isa = data.isa1, n = i)\n      for(j in 1:nrow(modules2)){\n        id2 <- isaRowNames(data = data2, type = \"isa\", data.isa = data.isa2, n = j)\n        perc <- round(ifelse(length(id1) > length(id2), sum(id1 %in% id2)/length(id1), sum(id2 %in% id1)/length(id2)), 2)\n        id.matr[i,j] <- perc\n      }\n    }\n  }\n  rownames(id.matr) <- paste0(\"mod\", seq(1,nrow(modules1)))\n  colnames(id.matr) <- paste0(\"mod\", seq(1,nrow(modules2)))\n  \n  identity.sel <- id.matr[apply(id.matr, MARGIN = 1, function(x) any(x %in% seq(sel, 0.99, by = 0.001))), ]\n  identity.sel <- identity.sel[,apply(identity.sel, MARGIN = 2, function(x) any(x %in% seq(sel, 0.99, by = 0.001)))]\n  \n  return(identity.sel)\n  \n}\n\n",
    "created" : 1503987898096.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1277993951",
    "id" : "EBCD931D",
    "lastKnownWriteTime" : 1504167982,
    "last_content_update" : 1504167982818,
    "path" : "C:/Mimi/Stage_CBG/2.EXPRESSION_MODULE/expression_module/ISA_functions.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}