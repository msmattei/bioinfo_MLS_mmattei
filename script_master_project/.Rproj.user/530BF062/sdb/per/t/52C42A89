{
    "collab_server" : "",
    "contents" : "library(ggplot2)\n\n# Load Data ---------------------------------------------------------------\n\nsetwd(\"C:/Mimi/Stage_CBG/1.METABOMATCHING/Data/\")\n\nmetabolome            <- read.table(\"Metabolome/metabolome.colaus.urine.20160523.txt\", h = T, sep = \",\",check.names = F)\nrownames(metabolome)  <- metabolome[,1]\nmetabolome[,1]        <- NULL\ngenotype_all          <- read.table(\"Genotype/hit.snp.genotypes.colaus.urine.20160523.txt\", h = T, sep = \",\")\nrownames(genotype_all)<- genotype_all$X\ngenotype_all$X        <- NULL\n\n# select subjects with genotype AND metabolome informations\ngenotype <- subset(genotype_all[rownames(genotype_all) %in% rownames(metabolome),])\n\n# linear regression -------------------------------------------------------\n\n## Calculate p-value of linear regression for all ppm position and all SNP\ndf_p  <- NULL\ndf_ES <- NULL\ndf_SE <- NULL\nfor(j in colnames(genotype)){\n  p_value <- NULL\n  ES      <- NULL\n  SE      <- NULL\n  for(i in colnames(metabolome)){\n    test <- summary(lm(metabolome[[i]] ~ 1 + genotype[[j]])) \n    p <- test$coefficients[\"genotype[[j]]\",\"Pr(>|t|)\"]\n    E <- test$coefficients[\"genotype[[j]]\", \"Estimate\"]\n    S <- test$coefficients[\"genotype[[j]]\", \"Std. Error\"]\n    p_value <- as.numeric(c(p_value, p))\n    ES      <- as.numeric(c(ES, E))\n    SE      <- as.numeric(c(SE, S))\n  }\n  df_p  <- cbind(df_p, p_value)\n  df_ES <- cbind(df_ES, ES)\n  df_SE <- cbind(df_SE, SE)\n}\n\ndf_p <- data.frame(df_p)\nrownames(df_p) <- colnames(metabolome)\ncolnames(df_p) <- colnames(genotype)\nlinear.regression.p <- cbind(as.numeric(rownames(df_SE)), df_SE)\ncolnames(linear.regression.p) [1] <- \"shift\"\n\ndf_ES <- data.frame(df_ES)\nrownames(df_ES) <- colnames(metabolome)\ncolnames(df_ES) <- colnames(genotype)\nlinear.regression.beta <- cbind(as.numeric(rownames(df_ES)), df_ES)\ncolnames(linear.regression.beta) [1] <- \"shift\"\n\ndf_SE <- data.frame(df_SE)\nrownames(df_SE) <- colnames(metabolome)\ncolnames(df_SE) <- colnames(genotype)\nlinear.regression.se <- cbind(as.numeric(rownames(df_SE)), df_SE)\ncolnames(linear.regression.se) [1] <- \"shift\"\n\ndf_shift <- df_ES/df_SE ## Effect size / standard error\nlinear.regression.z <- cbind(as.numeric(rownames(df_shift)), df_shift)\ncolnames(linear.regression.z) [1] <- \"shift\"\n\nwrite.table(linear.regression.z, \"C:/Mimi/Stage_CBG/Files/Results/Correlation_results/Correlation_files/lr.z.txt\", quote = F, row.names = F)\nwrite.table(linear.regression.se, \"C:/Mimi/Stage_CBG/Files/Results/Correlation_results/Correlation_files/lr.std_error.txt\", quote = F, row.names = F)\nwrite.table(linear.regression.beta, \"C:/Mimi/Stage_CBG/Files/Results/Correlation_results/Correlation_files/lr.beta.txt\", quote = F, row.names = F)\nwrite.table(linear.regression.p, \"C:/Mimi/Stage_CBG/Files/Results/Correlation_results/Correlation_files/lr.p_value.txt\", quote = F, row.names = F)\n\n\n# setwd(\"C:/Mimi/Stage_CBG/Files/Results/Correlation_results/pseudospectrum/\")\n# for(i in colnames(genotype)){\n#   shift <- as.numeric(colnames(metabolome))[-1] ## ppm\n#   beta  <- df_ES[[i]]\n#   se    <- df_SE[[i]]\n#   p     <- df_p[[i]]\n#   write.table(data.frame(shift, beta, se, p), file = paste(\"mirjam\", i, \"pseudospectrum.tsv\", sep = \".\"), sep = \"\\t\", row.names = FALSE, quote = F)\n# }\n\n\n# Score calculation -------------------------------------------------------\n\nTable_of_Peaks <- read.table(\"C:/Mimi/Stage_CBG/Files/Metabolite/hmdb.20160809.180.slop\", h = T)\n\nscore_final <- matrix(0, 29, 0)\nfor(j in unique(Table_of_Peaks$HMDB.ID)){\n  k=0\n  ppm_ps=NULL\n  for(i in Table_of_Peaks$ppm[Table_of_Peaks$HMDB.ID==j]){\n    ppm  <- linear.regression.z$shift[findInterval(linear.regression.z$shift, c((i-0.03), (i+0.03)), rightmost.closed = T)==1]\n    ppm_ps <- unique(c(ppm_ps, ppm))\n  }\n  z  <- linear.regression.z[linear.regression.z$shift %in% ppm_ps,][,-1]\n  if(nrow(z) == 0){\n    chisq <- data.frame(matrix(0, 29, 1))\n  } else {\n    chisq <- data.frame(apply(z^2, 2, sum))\n  }\n  colnames(chisq) <- j\n  k=k+nrow(z)\n  score <- -log10(pgamma(q = chisq[[j]], shape = k/2, scale = 2, lower.tail = F))\n  score_final <- cbind(score_final, score)  \n}\n\nscore_final <- t(as.data.frame(score_final))\nrownames(score_final) <- unique(Table_of_Peaks$HMDB.ID)\ncolnames(score_final) <- colnames(linear.regression.z)[-1]\n\n\n## top 8 score for each SNP\n\nfinal_score_log <- as.data.frame(score_final)\n\ntop8 <- data.frame(top1=0, top2=0, top3=0, top4=0, top5=0, top6=0, top=0, top8=0)\n\nfor(i in 1:ncol(final_score_log)){\n  n <- unlist(unique(sapply(head(sort(final_score_log[[i]], decreasing = T), 8), grep, final_score_log[[i]])))\n  top8[(2*i-1),] <- rownames(final_score_log)[n]\n  top8[(2*i),]   <- round(head(sort(final_score_log[[i]], decreasing = T), 8), 4)\n}\n\nrownames(top8) <- make.names(rep(colnames(linear.regression.z)[-1], each=2), unique = T)\ncolnames(top8) <- c(\"top1\", \"top2\", \"top3\", \"top4\", \"top5\", \"top6\", \"top7\", \"top8\")\n\nwrite.table(top8, \"C:/Mimi/Stage_CBG/Files/Results/top_180.20160818.txt\", quote = F)\n\n\n\n# Compare R and Matlab results --------------------------------------------\n\nmin_p <- apply(df_p, 2, which.min)\n\nR_result <- NULL\nfor(i in 1:29){\n  p     <- df_p[[i]][min_p[i]]\n  ES    <- df_ES[[i]][min_p[[i]]]\n  SE    <- df_SE[[i]][min_p[[i]]]\n  shift <- df_shift[[i]][min_p[[i]]]\n  R_result$rs          <- colnames(df_p)\n  R_result$pmin        <- c(R_result$pmin, p)\n  R_result$Effect.Size <- c(R_result$Effect.Size, ES)\n  R_result$Std.Error   <- c(R_result$Std.Error, SE)\n  R_result$shift       <- c(R_result$shift, shift)\n}\n\nmatlab_result <- read.table(\"C:/Mimi/Stage_CBG/Files/Results/regression.results.matlab.20160607.txt\", h = T)\nR_result      <- as.data.frame(R_result)\nmatlab_result$beta %in% round(R_result$Effect.Size, digits = 4) # 4 effect size (beta) value showed difference at the 4 digits\nmatlab_result$se %in% round(R_result$Std.Error, digits = 5) # all Standard error value were slitly differnet between matlab and R analysis at 5 digits after comma. All beside one were identical at 3 digits after comma.\n\n## table with all results combined\nresults <- data.frame(rs = R_result$rs, pmin.R = R_result$pmin, pmin.Mat = matlab_result$pmin, beta = matlab_result$beta, se.R = R_result$Std.Error, se.Mat = matlab_result$se, shift = matlab_result$shift)\n\n\n# Pseudo-spectrum figures ---------------------------------------------------------\n\nplot(rownames(df_p), -log10(df_p$rs4539242), type = \"h\", xlab = \"chemical shift [ppm]\", ylab = \"-log(p)\", xlim = c(10, 0), ylim = c(0, 50), main=i)\n## ggplot2 version\nqplot(x = as.numeric(rownames(df_p)), y = 0, xend = as.numeric(rownames(df_p)), yend = -log10(df_p$rs4539242), geom = \"segment\", xlab = \"chemical shift [ppm]\", ylab = \"-log(p)\", main=\"rs4539242\") + coord_cartesian(ylim = c(0, 50)) + theme_bw() + scale_x_reverse(lim=c(10,0), breaks = seq(10,0,-2))\n\n## loop for knitr report creating all 29 figures\nfor (i in colnames(df_p)){\n  r_plot <- qplot(x = as.numeric(rownames(df_p)), y = 0, xend = as.numeric(rownames(df_p)), yend = -log10(df_p[[i]]), geom = \"segment\", xlab = \"chemical shift [ppm]\", ylab = \"-log(p)\", main=i) + coord_cartesian(ylim = c(0, 50)) + theme_bw() + scale_x_reverse(lim=c(10,0), breaks = seq(10,0,-2))\n  print(r_plot)\n}\n\n\n\n# END ---------------------------------------------------------------------\n\n\n# Calculate the score for each metabolite ---------------------------------\n\n## 3-Aminoisobutanoic acid\n\nmet <- Table_of_Peaks[Table_of_Peaks$HMDB.ID==03911,]\n\nscore = matrix(0, 29, 1)\nfor(i in met$ppm){\n  z  <- df_shift[findInterval(rownames(df_shift), c((i-0.025), (i+0.025)), rightmost.closed = T)==1,]\n  if(nrow(z) == 0){\n    chisq <- matrix(0, 29, 1)\n  } else {\n    chisq <- data.frame(apply(z^2, 2, sum))\n  }\n  score <- score + chisq\n}\n\nrownames(score)[score$apply.z.2..2..sum. == max(score)]",
    "created" : 1491375584586.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1030701048",
    "id" : "52C42A89",
    "lastKnownWriteTime" : 1491375871,
    "last_content_update" : 1491375926058,
    "path" : "C:/Mimi/Stage_CBG/1.METABOMATCHING/Script/R/Metabomatching.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}